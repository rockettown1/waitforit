{"version":3,"sources":["assets/zoomOptions.png","assets/manage.png","assets/waitingroom.png","assets/more.png","assets/Codenation.png","assets/wearecodenation.png","assets/Digital-Academy-logo-Colour-PNG-CMYK-980x690 (1).png","components/Counter.js","utils/shouldRerender.js","components/Help.js","components/Sidebar.js","components/Video.js","App.js","serviceWorker.js","index.js","assets/Leon.jpg"],"names":["module","exports","Counter","React","memo","total","console","log","date","Date","now","renderer","hours","minutes","seconds","Container","StyledDiv","StyledSpan","Time","zeroPad","TimeLabel","key","props","nextProps","styled","div","span","p","Help","style","textAlign","StyledImg","src","Options","Manage","More","Wait","img","Sidebar","grabMin","grabSec","setTime","newMessage","message","show","setShow","showVid","setShowVid","title","newTitle","newBackground","logo","setLogo","cam","setCam","reset","useState","val","setVal","help","setHelp","minsArr","i","push","secsArr","Today","getMonth","StyledForm","onSubmit","onClick","marginTop","color","cursor","type","value","placeholder","onChange","fontSize","onPaste","event","target","contentEditable","SecondaryButton","map","min","sec","CheckBoxDiv","Start","marginBottom","position","top","left","marginLeft","right","bottom","marginRight","form","button","Video","CNYoutube","number","setNumber","videoId","opts","height","width","playerVars","autoplay","onEnd","length","borderRadius","App","curMin","setCurMin","curSec","setCurSec","curTotal","setCurTotal","setMessage","setTitle","background","setBackground","setError","cambridge","setCambridge","preventDefault","AppContainer","className","back","Leon","Button","Title","BackgroundCover","clipboardData","getData","error","Wrapper","Message","DALogo","DA","CNRetro","WeAreCN","CN","h1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.012f904f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zoomOptions.958e17ff.png\";","module.exports = __webpack_public_path__ + \"static/media/manage.9c8f2ca1.png\";","module.exports = __webpack_public_path__ + \"static/media/waitingroom.aa7f5701.png\";","module.exports = __webpack_public_path__ + \"static/media/more.01f23685.png\";","module.exports = __webpack_public_path__ + \"static/media/Codenation.21daf0eb.png\";","module.exports = __webpack_public_path__ + \"static/media/wearecodenation.fc2e191c.png\";","module.exports = __webpack_public_path__ + \"static/media/Digital-Academy-logo-Colour-PNG-CMYK-980x690 (1).5cefb1e7.png\";","import React from \"react\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport { shouldComponentRerender } from \"../utils/shouldRerender\";\nimport styled from \"styled-components\";\n\nconst Counter = React.memo(({ total }) => {\n  const renderer = ({ hours, minutes, seconds }) => {\n    return (\n      <Container>\n        <StyledDiv>\n          <StyledSpan>\n            <Time>{zeroPad(hours)}</Time>\n            <TimeLabel>hours</TimeLabel>\n          </StyledSpan>\n          <StyledSpan>\n            <Time>{zeroPad(minutes)}</Time>\n            <TimeLabel>Mins</TimeLabel>\n          </StyledSpan>\n          <StyledSpan>\n            <Time>{zeroPad(seconds)}</Time>\n            <TimeLabel>Secs</TimeLabel>\n          </StyledSpan>\n        </StyledDiv>\n      </Container>\n    );\n  };\n\n  console.log(\"I have been called\");\n\n  return (\n    <div>\n      <Countdown date={Date.now() + total} renderer={renderer} key={total} />\n    </div>\n  );\n}, shouldComponentRerender);\n\nexport default Counter;\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 9;\n  display: flex;\n  justify-content: center;\n  margin-top: -10px;\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 300%;\n\n  color: white;\n`;\n\nconst StyledSpan = styled.span`\n  margin: 0 20px;\n  width: 65px;\n`;\n\nconst Time = styled.p`\n  margin: 0;\n  padding: 0;\n`;\n\nconst TimeLabel = styled.p`\n  margin: 0;\n  padding: 0;\n  font-size: 15px;\n`;\n","//custom check to see if the timer should rerender\n// returning true means render is skipped\nexport const shouldComponentRerender = (props, nextProps) => {\n  if (props.total === nextProps.total) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Options from \"../assets/zoomOptions.png\";\nimport Manage from \"../assets/manage.png\";\nimport Wait from \"../assets/waitingroom.png\";\nimport More from \"../assets/more.png\";\n\nconst Help = () => {\n  return (\n    <Container>\n      <h3>Notes for using the Video component</h3>\n      <p style={{ textAlign: \"left\" }}>\n        If you select the option to 'Load with Video' while using this waiting screen here are a few things to note:\n      </p>\n      <h3>Zoom</h3>\n      <h5>Setting the audio and video</h5>\n      <p style={{ textAlign: \"left\" }}>\n        When you share your screen on Zoom you have the ability to share your computer sound and optimise your screen\n        share for using videos.{\" \"}\n      </p>\n      <StyledImg src={Options} />\n      <p style={{ textAlign: \"left\" }}>\n        {\" \"}\n        Once you've selected the screen you want to share, you should make sure both of these options are selected to\n        prevent a weird laggy video being shown.{\" \"}\n      </p>\n      <h5>Disabling the waiting room</h5>\n      <p style={{ textAlign: \"left\" }}>\n        You can also disable the waiting room people are placed in when they first join your call. This way they will\n        see the loading screen as soon as they arrive.\n      </p>\n      <StyledImg src={Manage} />\n      <p style={{ textAlign: \"left\" }}>First click on Manage Participants</p>\n      <StyledImg src={More} />\n      <p style={{ textAlign: \"left\" }}>Then click on the 'More' option</p>\n      <StyledImg src={Wait} />\n      <p style={{ textAlign: \"left\" }}>\n        Then make sure the option to 'Put participants in Waiting Room on Entry' is not checked\n      </p>\n      <h3>Other Platforms</h3>\n      <p style={{ textAlign: \"left\" }}>\n        I'm not sure if other platforms have these settings as I have only tested on Zoom. Unless you have found these\n        options on other platforms I would opt NOT to use the video component. If you do find a way to screen share\n        video and sound without lag on other platforms please let me know so I can update this.{\" \"}\n      </p>\n    </Container>\n  );\n};\n\nexport default Help;\n\nconst Container = styled.div`\n  width: 340px;\n  border-right: 1px solid rgba(255, 255, 255, 0.1);\n  margin: 0 10px;\n  overflow: scroll;\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n  height: auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Help from \"./Help\";\n\nconst Sidebar = ({\n  grabMin,\n  grabSec,\n  setTime,\n  newMessage,\n  message,\n  show,\n  setShow,\n  showVid,\n  setShowVid,\n  title,\n  newTitle,\n  newBackground,\n  logo,\n  setLogo,\n  cam,\n  setCam,\n  reset,\n}) => {\n  const [val, setVal] = useState(\"\");\n  const [help, setHelp] = useState(false);\n  //setup for options in select inputs\n  const minsArr = [0, 1, 2, 3, 4];\n  for (let i = 5; i <= 60; i += 5) {\n    minsArr.push(i);\n  }\n  const secsArr = [];\n  for (let i = 0; i < 60; i += 5) {\n    secsArr.push(i);\n  }\n\n  const Today = new Date();\n  console.log(Today.getMonth());\n\n  return (\n    <Container show={show} help={help}>\n      <Help />\n\n      <StyledForm onSubmit={setTime}>\n        <h4 onClick={() => setHelp(!help)} style={{ marginTop: \"35px\" }}>\n          If this is the first time you've used this web app please{\" \"}\n          <span style={{ color: \"#f5b32e\", cursor: \"pointer\" }}>click here</span>\n        </h4>\n\n        <label>Set a title for the session</label>\n        <input type=\"text\" value={title} placeholder=\"Title\" onChange={newTitle} />\n        <label>Set a message for the timer</label>\n        <input type=\"text\" value={message} placeholder=\"Message\" onChange={newMessage} />\n        <label>\n          Change the background image <br />{\" \"}\n          <span style={{ fontSize: \"0.9em\" }}>\n            (must be a valid image url and must be pasted in - it listens for the paste event.)\n          </span>\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Paste a url in here\"\n          onPaste={(event) => {\n            newBackground(event);\n          }}\n          onChange={(event) => setVal(event.target.value)}\n          contentEditable=\"true\"\n          value={val}\n        />\n        <SecondaryButton\n          onClick={() => {\n            reset();\n            setVal(\"\");\n          }}\n        >\n          Reset Default Image\n        </SecondaryButton>\n        <select onChange={(event) => grabMin(event)}>\n          <option>Set mins:</option>\n          {minsArr.map((min) => {\n            return <option value={min}>{min}</option>;\n          })}\n        </select>\n        <select onChange={(event) => grabSec(event)}>\n          <option>Set secs</option>\n          {secsArr.map((sec) => {\n            return <option value={sec}>{sec}</option>;\n          })}\n        </select>\n        <CheckBoxDiv>\n          <label>Load with video</label>\n          <input type=\"checkbox\" onClick={() => setShowVid(!showVid)} />\n        </CheckBoxDiv>\n        <CheckBoxDiv>\n          <label>Go retro</label>\n          <input type=\"checkbox\" onClick={() => setLogo(!logo)} />\n        </CheckBoxDiv>\n        <CheckBoxDiv>\n          <label>Go Cambridge</label>\n          <input type=\"checkbox\" onClick={() => setCam(!cam)} />\n        </CheckBoxDiv>\n\n        <Start\n          onClick={() => {\n            setShow(!show);\n            setHelp(false);\n          }}\n        >\n          Start Timer\n        </Start>\n        <h5\n          style={{\n            marginBottom: 0,\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            marginLeft: \"22px\",\n            color: \"#5e5c58\",\n          }}\n        >\n          {\"<\"} Updated 23/04/2020\n        </h5>\n      </StyledForm>\n      <SecondaryButton\n        onClick={() => {\n          setShow(!show);\n          setHelp(false);\n        }}\n        style={{ position: \"absolute\", right: 0, bottom: 0, marginRight: \"20px\" }}\n      >\n        Close Sidebar\n      </SecondaryButton>\n    </Container>\n  );\n};\n\nexport default Sidebar;\n\nconst Container = styled.div`\n  position: absolute;\n  transition: all 1s;\n  background-color: black;\n  height: 100vh;\n  width: 710px;\n  top: 0;\n  left: 0;\n  z-index: 25;\n  display: flex;\n  /* flex-direction: column; */\n  justify-content: flex-end;\n  color: white;\n  transform: ${({ show, help }) => (show ? (help ? \"translateX(0)\" : \"translateX(-350px)\") : \"translateX(-710px)\")};\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  padding: 20px;\n  margin-right: 10px;\n  position: relative;\n\n  label {\n    text-align: left;\n    min-width: 150px;\n  }\n\n  select {\n    width: 75px;\n    margin-top: 20px;\n    height: 25px;\n  }\n\n  input[type=\"text\"] {\n    width: 300px;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    height: 25px;\n    font-size: 15px;\n    border-radius: 5px;\n  }\n\n  button {\n    width: 75px;\n    margin-top: 20px;\n  }\n`;\n\nconst SecondaryButton = styled.p`\n  background-color: #f5b32e;\n  font-size: 10px;\n  width: 100px;\n  border-radius: 5px;\n  padding: 5px;\n  color: black;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nconst CheckBoxDiv = styled.div`\n  display: flex;\n  margin-top: 20px;\n  align-items: flex-end;\n`;\n\nconst Start = styled.button`\n  background-color: #f5b32e;\n  height: 30px;\n  border-radius: 5px;\n  position: relative;\n  width: 100% !important;\n  color: black;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n","import React, { useState } from \"react\";\nimport Youtube from \"react-youtube\";\nimport styled from \"styled-components\";\n\nexport default function Video() {\n  const CNYoutube = [\"m2WOkT253uk\", \"Bb-0JJKST6M\", \"hj7eHceHjGA\", \"ZD0idqVjYAw\"];\n  const [number, setNumber] = useState(0);\n\n  const opts = {\n    height: \"400\",\n    width: \"700\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const _onEnd = () => {\n    if (number < CNYoutube.length - 1) {\n      setNumber(number + 1);\n    } else {\n      setNumber(0);\n    }\n  };\n\n  return (\n    <Container>\n      <Youtube videoId={CNYoutube[number]} opts={opts} onEnd={() => _onEnd()} style={{ borderRadius: \"10px\" }} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  left: 0;\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 1s;\n  border-radius: 15px;\n  overflow: hidden;\n  width: 700px;\n  height: 380px;\n  margin-left: 50px;\n  z-index: 8;\n`;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/video-react/dist/video-react.css\";\nimport Counter from \"./components/Counter\";\nimport Sidebar from \"./components/Sidebar\";\nimport styled from \"styled-components\";\nimport Leon from \"./assets/Leon.jpg\";\nimport CN from \"./assets/Codenation.png\";\nimport WeAreCN from \"./assets/wearecodenation.png\";\nimport DA from \"./assets/Digital-Academy-logo-Colour-PNG-CMYK-980x690 (1).png\";\nimport Video from \"./components/Video\";\n\nconst App = () => {\n  const [curMin, setCurMin] = useState(0);\n  const [curSec, setCurSec] = useState(0);\n  const [curTotal, setCurTotal] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [showVid, setShowVid] = useState(false);\n  const [background, setBackground] = useState(null);\n  const [logo, setLogo] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [cambridge, setCambridge] = useState(false);\n\n  const convertTime = (min, sec) => {\n    let minsInMilli = min * 60 * 1000;\n    let secsInMilli = sec * 1000;\n    return minsInMilli + secsInMilli;\n  };\n\n  const grabMin = (event) => {\n    setCurMin(event.target.value);\n  };\n  const grabSec = (event) => {\n    setCurSec(event.target.value);\n  };\n\n  const setTime = (event) => {\n    event.preventDefault();\n    const total = convertTime(curMin, curSec);\n    setCurTotal(total);\n  };\n\n  const validatePaste = (event) => {\n    try {\n      setBackground(event.clipboardData.getData(\"Text\"));\n    } catch (error) {\n      setError(error, \"Invalid URL\");\n    }\n  };\n\n  return (\n    <AppContainer className=\"App\" back={background || Leon}>\n      <Button onClick={() => setShow(!show)}>Open SideBar</Button>\n      <Title>{title}</Title>\n      <BackgroundCover></BackgroundCover>\n      <Sidebar\n        show={show}\n        setShow={setShow}\n        grabMin={grabMin}\n        grabSec={grabSec}\n        setTime={setTime}\n        newMessage={(event) => setMessage(event.target.value)}\n        message={message}\n        newTitle={(event) => setTitle(event.target.value)}\n        title={title}\n        showVid={showVid}\n        setShowVid={setShowVid}\n        background={background}\n        newBackground={validatePaste}\n        logo={logo}\n        reset={() => setBackground(Leon)}\n        setLogo={setLogo}\n        cam={cambridge}\n        setCam={setCambridge}\n      />\n      {showVid && <Video />}\n      <Wrapper>\n        <Message>{message}</Message>\n        <Counter total={curTotal} setTime={setTime} setCurMin={setCurMin} setCurSec={setCurSec} />\n      </Wrapper>\n      {cambridge ? <DALogo src={DA} /> : <CNRetro src={logo ? WeAreCN : CN} />}\n    </AppContainer>\n  );\n};\n\nexport default App;\n\nconst CNRetro = styled.img`\n  position: absolute;\n  height: 100px;\n  width: auto;\n  bottom: 0;\n  left: 0;\n  margin-left: 20px;\n  margin-bottom: 20px;\n`;\n\nconst DALogo = styled.img`\n  position: absolute;\n  height: 130px;\n  width: auto;\n  bottom: 0;\n  left: 0;\n  margin-left: 20px;\n  margin-bottom: 20px;\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  overflow: hidden;\n  background-image: ${({ back }) => `url(${back})`};\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n`;\n\nconst Button = styled.p`\n  position: absolute;\n  text-align: center;\n  z-index: 20;\n  margin-left: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  top: 0;\n  left: 0%;\n  opacity: 0;\n  transition: all 1s;\n  background-color: white;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst BackgroundCover = styled.div`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.7);\n  pointer-events: none;\n`;\n\nconst Title = styled.h1`\n  font-size: 90px;\n  width: 70%;\n  text-align: right;\n  margin-right: 50px;\n  color: white;\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  z-index: 9;\n`;\n\nconst Wrapper = styled.div`\n  margin-right: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Message = styled.h1`\n  position: relative;\n  z-index: 9;\n  color: white;\n  margin-top: 20px;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Leon.f1b11487.jpg\";"],"sourceRoot":""}